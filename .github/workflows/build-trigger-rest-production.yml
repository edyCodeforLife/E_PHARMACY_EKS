on:
  push:
    branches: [ build/release ]

name: Build, Push Image to ECR, and Deploy Project "E-COMMERCE PHARMACY ALTEACARE"

jobs:
  deploy:
    name: Deploy E-COMMERCE PHARMACY ALTEACARE to Production Environment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get Package Version
        run: node -p -e '`PACKAGE_VERSION=${require("./package.json").version}`' >> $GITHUB_ENV

      - name: Build, tag, and push image E-COMMERCE PHARMACY ALTEACARE to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPOSITORY_PRODUCTION }}
          IMAGE_TAG: v.${{ env.PACKAGE_VERSION }}-production-${{ github.sha }}
        run: |
          # Build a docker container and push it to ECR 
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . -f Dockerfile.prod
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image-name::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Change Deployment E-COMMERCE PHARMACY ALTEACARE on EKS
        uses: ianbelcher/eks-kubectl-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          cluster_name: ${{ secrets.CLUSTER_NAME_PRODUCTION}}
          args: set image --record ${{ secrets.DEPLOYMENT_NAME }} ${{ secrets.CONTAINER_NAME }}=${{ steps.build-image.outputs.image-name }} -n ${{ secrets.NAMESPACE }}
      - name: Slack Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: 'deployment-information'
          SLACK_COLOR: ${{ job.status }}
          SLACK_USERNAME: 'AlteaCare Bot'
          SLACK_ICON: 'https://alteacare-assets.s3.ap-southeast-1.amazonaws.com/images/logo_48x48.png'
          SLACK_FOOTER: 'AlteaCare Deployment Information'
